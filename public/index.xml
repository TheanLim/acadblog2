<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thean C. Lim on Thean C. Lim</title>
    <link>/</link>
    <description>Recent content in Thean C. Lim on Thean C. Lim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Thean Cheat Lim</copyright>
    <lastBuildDate>Thu, 12 Apr 2018 00:00:00 -0500</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Testing Image</title>
      <link>/post/testing-image/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/testing-image/</guid>
      <description>&lt;p&gt;The following images are taken from &lt;a href=&#34;https://blog.designcrowd.com/article/549/famous-landmarks-of-the-world-without-people&#34;&gt;DesignCrowd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/paris_tourist.jpg&#34; alt=&#34;Image with tourist aka tour&#34; /&gt; &lt;img src=&#34;/img/paris_no_tourist.jpg&#34; alt=&#34;Image with NO tourist aka no_tour&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This first image is an image with tourists ( I call it as &lt;code&gt;tour&lt;/code&gt;) while the second one has no tourist – &lt;code&gt;no_tour&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/rome.jpg&#34; alt=&#34;Rome&#34; /&gt; This is another &lt;code&gt;new&lt;/code&gt; image that is different from the above two.&lt;/p&gt;
&lt;p&gt;The goals are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use PCA to compress the &lt;code&gt;tour&lt;/code&gt; image&lt;/li&gt;
&lt;li&gt;Test the generalizability of the PC loadings obtained from &lt;code&gt;tour&lt;/code&gt; image to other similar image (i.e., the &lt;code&gt;no_tour&lt;/code&gt; image) and a very different image (i.e. &lt;code&gt;new&lt;/code&gt; image).&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;loading-pictures-and-standardizing-the-sizes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Loading pictures and standardizing the sizes&lt;/h1&gt;
&lt;p&gt;First, let’s load the pictures and look at the dimensions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(jpeg)
path = &amp;quot;C:/Users/mirac/Desktop/Work/acadblog2/static/img/imagecompression&amp;quot;
tour = readJPEG(paste(path,&amp;quot;paris_tourist.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))
no_tour = readJPEG(paste(path,&amp;quot;paris_no_tourist.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))
new = readJPEG(paste(path,&amp;quot;rome.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(tour); dim(no_tour); dim(new)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 459 715   3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 458 715   3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 500 750   3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The three pistures do not have the same dimensions so let’s resize them to &lt;code&gt;458, 715, 3.&lt;/code&gt; The &lt;code&gt;3&lt;/code&gt; represents &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, and &lt;code&gt;B&lt;/code&gt;, the three color schemes from the images.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;EBImage&amp;quot;)
# scale to a specific width and height
tour &amp;lt;- resize(tour, w = 458, h = 715)
new &amp;lt;- resize(new, w = 458, h = 715)

# extract the pixel array
tour &amp;lt;- as.array(tour)
new &amp;lt;- as.array(new)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-tour-image.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;tour&lt;/code&gt; Image.&lt;/h1&gt;
&lt;div id=&#34;pca&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PCA&lt;/h2&gt;
&lt;p&gt;Break down each color scheme into three dataframe and perform PCA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rtour = tour[, ,1]
gtour = tour[, ,2]
btour = tour[, ,3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prtour = prcomp(rtour, center = FALSE)
pgtour = prcomp(gtour, center = FALSE)
pbtour = prcomp(btour, center = FALSE)

tour.pca = list(prtour, pgtour, pbtour)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scree-plot-and-cumulative-variation-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scree Plot and Cumulative Variation Plot&lt;/h2&gt;
&lt;p&gt;Take a look at the Scree plot of the PCA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
# Create a dataframe for easier plotting
df = data.frame(scheme = rep(c(&amp;quot;R&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;B&amp;quot;),each =458), 
                index = rep(1:458,  3),
                var = c(prtour$sdev^2,
                        pgtour$sdev^2, 
                        pbtour$sdev^2))

df %&amp;lt;&amp;gt;% group_by(scheme) %&amp;gt;%
  mutate(propvar =100*var/sum(var)) %&amp;gt;%
  mutate(cumsum = cumsum(propvar)) %&amp;gt;%
  ungroup()

#plot
library(ggplot2)
#relevel to make it look nicer
df$scheme = factor(df$scheme,levels(df$scheme)[c(3,2,1)])

df %&amp;gt;% ggplot(aes( x = index, y = propvar, fill = scheme)) + 
    geom_bar(stat=&amp;quot;identity&amp;quot;) + 
    labs(title=&amp;quot;Screeplot of Principal Component&amp;quot;, x =&amp;quot;Principal Component&amp;quot;, 
         y=&amp;quot;% of Variance&amp;quot;) + geom_line()  + 
    scale_x_continuous(limits = c(0,30)) +
    facet_wrap(~scheme)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:screeplot&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2018-04-14-testing-image_files/figure-html/screeplot-1.png&#34; alt=&#34;The **elbow** of the screeplot is between the fourth and the fifth PC&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: The &lt;strong&gt;elbow&lt;/strong&gt; of the screeplot is between the fourth and the fifth PC
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Image Compression with Principal Component Analysis</title>
      <link>/project/image-compression-with-principal-component-analysis/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/image-compression-with-principal-component-analysis/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#loading-pictures-and-standardizing-the-sizes&#34;&gt;Loading pictures and standardizing the sizes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-tour-image.&#34;&gt;The &lt;code&gt;tour&lt;/code&gt; Image.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pca&#34;&gt;PCA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scree-plot-and-cumulative-variation-plot&#34;&gt;Scree Plot and Cumulative Variation Plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#image-reconstruction&#34;&gt;Image Reconstruction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#image-size-compression&#34;&gt;Image Size Compression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-no_tour-image&#34;&gt;The &lt;code&gt;no_tour&lt;/code&gt; Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-new-image.&#34;&gt;The &lt;code&gt;new&lt;/code&gt; Image.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;The following images are taken from &lt;a href=&#34;https://blog.designcrowd.com/article/549/famous-landmarks-of-the-world-without-people&#34;&gt;DesignCrowd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/paris_tourist.jpg&#34; alt=&#34;Image with tourist aka tour&#34; /&gt; &lt;img src=&#34;/img/paris_no_tourist.jpg&#34; alt=&#34;Image with NO tourist aka no_tour&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This first image is an image with tourists ( I call it as &lt;code&gt;tour&lt;/code&gt;) while the second one has no tourist – &lt;code&gt;no_tour&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/rome.jpg&#34; alt=&#34;Rome&#34; /&gt; This is another &lt;code&gt;new&lt;/code&gt; image that is different from the above two.&lt;/p&gt;
&lt;p&gt;The goals are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use PCA to compress the &lt;code&gt;tour&lt;/code&gt; image&lt;/li&gt;
&lt;li&gt;Test the generalizability of the PC loadings obtained from &lt;code&gt;tour&lt;/code&gt; image to other similar image (i.e., the &lt;code&gt;no_tour&lt;/code&gt; image) and a very different image (i.e. &lt;code&gt;new&lt;/code&gt; image).&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;loading-pictures-and-standardizing-the-sizes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Loading pictures and standardizing the sizes&lt;/h1&gt;
&lt;p&gt;First, let’s load the pictures and look at the dimensions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(jpeg)
path = &amp;quot;C:/Users/mirac/Desktop/Work/acadblog2/static/img/imagecompression&amp;quot;
tour = readJPEG(paste(path,&amp;quot;paris_tourist.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))
no_tour = readJPEG(paste(path,&amp;quot;paris_no_tourist.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))
new = readJPEG(paste(path,&amp;quot;rome.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(tour); dim(no_tour); dim(new)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 459 715   3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 458 715   3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 500 750   3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The three pistures do not have the same dimensions so let’s resize them to &lt;code&gt;458, 715, 3.&lt;/code&gt; The &lt;code&gt;3&lt;/code&gt; represents &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, and &lt;code&gt;B&lt;/code&gt;, the three color schemes from the images.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;EBImage&amp;quot;)
# scale to a specific width and height
tour &amp;lt;- resize(tour, w = 458, h = 715)
new &amp;lt;- resize(new, w = 458, h = 715)

# extract the pixel array
tour &amp;lt;- as.array(tour)
new &amp;lt;- as.array(new)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-tour-image.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;tour&lt;/code&gt; Image.&lt;/h1&gt;
&lt;div id=&#34;pca&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PCA&lt;/h2&gt;
&lt;p&gt;Break down each color scheme into three dataframe and perform PCA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rtour = tour[, ,1]
gtour = tour[, ,2]
btour = tour[, ,3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prtour = prcomp(rtour, center = FALSE)
pgtour = prcomp(gtour, center = FALSE)
pbtour = prcomp(btour, center = FALSE)

tour.pca = list(prtour, pgtour, pbtour)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scree-plot-and-cumulative-variation-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scree Plot and Cumulative Variation Plot&lt;/h2&gt;
&lt;p&gt;Take a look at the Scree plot of the PCA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
# Create a dataframe for easier plotting
df = data.frame(scheme = rep(c(&amp;quot;R&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;B&amp;quot;),each =458), 
                index = rep(1:458,  3),
                var = c(prtour$sdev^2,
                        pgtour$sdev^2, 
                        pbtour$sdev^2))

df %&amp;lt;&amp;gt;% group_by(scheme) %&amp;gt;%
  mutate(propvar =100*var/sum(var)) %&amp;gt;%
  mutate(cumsum = cumsum(propvar)) %&amp;gt;%
  ungroup()

#plot
library(ggplot2)
#relevel to make it look nicer
df$scheme = factor(df$scheme,levels(df$scheme)[c(3,2,1)])

df %&amp;gt;% ggplot(aes( x = index, y = propvar, fill = scheme)) + 
    geom_bar(stat=&amp;quot;identity&amp;quot;) + 
    labs(title=&amp;quot;Screeplot of Principal Component&amp;quot;, x =&amp;quot;Principal Component&amp;quot;, 
         y=&amp;quot;% of Variance&amp;quot;) + geom_line()  + 
    scale_x_continuous(limits = c(0,30)) +
    facet_wrap(~scheme)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:screeplot&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/project/2018-04-13-image-compression-with-principal-component-analysis_files/figure-html/screeplot-1.png&#34; alt=&#34;The **elbow** of the screeplot is between the fourth and the fifth PC&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: The &lt;strong&gt;elbow&lt;/strong&gt; of the screeplot is between the fourth and the fifth PC
&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% ggplot(aes( x = index, y = cumsum, fill = scheme)) + 
    geom_bar(stat=&amp;quot;identity&amp;quot;) + 
    labs(title=&amp;quot;Cumulative Proportion of Variance Explained Principal Component&amp;quot;, x=&amp;quot;Principal Component&amp;quot;, 
         y=&amp;quot;Cumulative % of Variance&amp;quot;) + geom_line() + 
    scale_x_continuous(limits = c(0,30)) +
    facet_wrap(~scheme)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:cumprop&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/project/2018-04-13-image-compression-with-principal-component-analysis_files/figure-html/cumprop-1.png&#34; alt=&#34;Thirty PCs appear to be good enough to explain most of the variations&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Thirty PCs appear to be good enough to explain most of the variations
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It seems like the first 30 PCs have enough proportion of variance covered because the proportion of variance explained is close to 100%.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;image-reconstruction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Image Reconstruction&lt;/h2&gt;
&lt;p&gt;Let’s reconstruct the first image. I choose to look at the images constructed from 2, 30, 200, and 300 Prinicipal Components.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This is the number of desired PCs
pcnum = c(2,30,200, 300)

for(i in pcnum){
    pca.img &amp;lt;- sapply(tour.pca, function(j) {
      compressed.img &amp;lt;- j$x[,1:i] %*% t(j$rotation[,1:i])
    }, simplify = &amp;#39;array&amp;#39;)
  writeJPEG(pca.img, paste(path,&amp;quot;/tour/tour_compressed_&amp;quot;, round(i,0), &amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_2_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_30_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_200_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_300_components.jpg&#34; alt=&#34;Compress images using 2, 30, 200 and 300 PCs respectively.&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Compress images using 2, 30, 200 and 300 PCs respectively.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It appears that using 200 PCs is enough to compress the image while maintaining a good quality.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;image-size-compression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Image Size Compression&lt;/h2&gt;
&lt;p&gt;But how about the sizes of these images?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;original &amp;lt;- file.info(paste(path,&amp;quot;paris_tourist.jpg&amp;quot;, sep =&amp;quot;/&amp;quot;))$size / 1000

for(i in pcnum){
  filename = paste(&amp;quot;tour_compressed_&amp;quot;,i,&amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;)
  full.path = paste(path,&amp;quot;tour&amp;quot;,filename,sep = &amp;quot;/&amp;quot;)
  size = file.info(full.path)$size/1000
  cat(filename, &amp;#39;size:&amp;#39;,size,&amp;quot;\n&amp;quot;,
      &amp;quot;Reduction from the original image: &amp;quot;,(original-size)/original*100,&amp;quot;% \n\n&amp;quot; )
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tour_compressed_2_components.jpg size: 30.258 
##  Reduction from the original image:  53.07237 % 
## 
## tour_compressed_30_components.jpg size: 55.743 
##  Reduction from the original image:  13.54726 % 
## 
## tour_compressed_200_components.jpg size: 43.244 
##  Reduction from the original image:  32.93216 % 
## 
## tour_compressed_300_components.jpg size: 39.435 
##  Reduction from the original image:  38.8396 %&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Surprisingly, the compressed image that uses 30 PCs has the lowest reduction of image size.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-no_tour-image&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;no_tour&lt;/code&gt; Image&lt;/h1&gt;
&lt;p&gt;Now, let’s use a similar image (&lt;code&gt;no_tour&lt;/code&gt;) and use the Principal Loadings obtained from the previous step to execute image compression.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;compress ()&lt;/code&gt; function is meant for compressing a new image (i.e., image not used in the previous step to obtain Principal Loadings).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rno_tour = no_tour[, ,1]
gno_tour = no_tour[, ,2]
bno_tour = no_tour[, ,3]

no_tour_rgb = list(rno_tour,gno_tour,bno_tour)

compress &amp;lt;- function(trained_rgb_pca, newrgb, pcnum, dims){
   r_rotate = trained_rgb_pca[[1]]$rotation
   g_rotate = trained_rgb_pca[[2]]$rotation
   b_rotate = trained_rgb_pca[[3]]$rotation
   
   r = newrgb[[1]]
   g = newrgb[[2]]
   b = newrgb[[3]]
   
  pred_r = (r %*% r_rotate)[,1:pcnum] %*% t(r_rotate[,1:pcnum])
  pred_g = (g %*% g_rotate)[,1:pcnum] %*% t(g_rotate[,1:pcnum])
  pred_b = (b %*% b_rotate)[,1:pcnum] %*% t(b_rotate[,1:pcnum])
  
  pred.pca = list(pred_r, pred_g, pred_b)
  pred.array = array(as.numeric(unlist(pred.pca)),dim = dims)
  return(pred.array)
}

for(i in pcnum){
    pca.img = compress(tour.pca, no_tour_rgb, pcnum = i, dims = c( 458, 715,3))
    writeJPEG(pca.img, paste(path,&amp;quot;/no_tour&amp;quot;,&amp;quot;/no_tour_compressed_&amp;quot;, round(i,0), &amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_2_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_30_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_200_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-6&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_300_components.jpg&#34; alt=&#34;Compress simialr images to test the generalizability of PCs&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4: Compress simialr images to test the generalizability of PCs
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;One can observe that the last image’s quality is the best out of four (since it uses the most PCs) but it is not even close to a high quality image.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-new-image.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;new&lt;/code&gt; Image.&lt;/h1&gt;
&lt;p&gt;We now know that the performance of PCA in image compression is highly useful to its original image but not for a similar image. It’s natural to ask whether it will be worst if a totally unrelated image (such as &lt;code&gt;new&lt;/code&gt; image) was used instead. Let’s check it out.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rnew = new[, ,1]
gnew = new[, ,2]
bnew = new[, ,3]

new_rgb = list(rnew,gnew,bnew)

for (i in pcnum){
    pca.img = compress(tour.pca, new_rgb, pcnum = i, dims = c(458,715, 3))
    writeJPEG(pca.img, paste(path,&amp;quot;/new&amp;quot;,&amp;quot;/new_compressed_&amp;quot;, round(i,0), &amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/new/new_compressed_2_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/new/new_compressed_30_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/new/new_compressed_200_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-9&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/img/imagecompression/new/new_compressed_300_components.jpg&#34; alt=&#34;Compressing a non-related image using previously extracted PC loadings&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 5: Compressing a non-related image using previously extracted PC loadings
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;While the image output does not look exactly like the original image, the main features of the image is clearly shown on it. This is pretty impressive because the machine learns the rules of extracting important information based on only one image &lt;code&gt;tour&lt;/code&gt;. One can experiment increase the number of PCs to get a higher resolution image too.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;Principal Component Analysis is a great tool for dimension reduction (thus, sinze reduction in this case), extracting important insights, and uncover underlying message of a dataset.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Image Compression with Principal Component Analysis</title>
      <link>/project/image-compression-with-principal-component-analysis/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/image-compression-with-principal-component-analysis/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#loading-pictures-and-standardizing-the-sizes&#34;&gt;Loading pictures and standardizing the sizes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-tour-image.&#34;&gt;The &lt;code&gt;tour&lt;/code&gt; Image.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pca&#34;&gt;PCA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scree-plot-and-cumulative-variation-plot&#34;&gt;Scree Plot and Cumulative Variation Plot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#image-reconstruction&#34;&gt;Image Reconstruction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#image-size-compression&#34;&gt;Image Size Compression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-no_tour-image&#34;&gt;The &lt;code&gt;no_tour&lt;/code&gt; Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-new-image.&#34;&gt;The &lt;code&gt;new&lt;/code&gt; Image.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;The following images are taken from &lt;a href=&#34;https://blog.designcrowd.com/article/549/famous-landmarks-of-the-world-without-people&#34;&gt;DesignCrowd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/paris_tourist.jpg&#34; alt=&#34;Image with tourist aka tour&#34; /&gt; &lt;img src=&#34;/img/paris_no_tourist.jpg&#34; alt=&#34;Image with NO tourist aka no_tour&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This first image is an image with tourists ( I call it as &lt;code&gt;tour&lt;/code&gt;) while the second one has no tourist – &lt;code&gt;no_tour&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/rome.jpg&#34; alt=&#34;Rome&#34; /&gt; This is another &lt;code&gt;new&lt;/code&gt; image that is different from the above two.&lt;/p&gt;
&lt;p&gt;The goals are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use PCA to compress the &lt;code&gt;tour&lt;/code&gt; image&lt;/li&gt;
&lt;li&gt;Test the generalizability of the PC loadings obtained from &lt;code&gt;tour&lt;/code&gt; image to other similar image (i.e., the &lt;code&gt;no_tour&lt;/code&gt; image) and a very different image (i.e. &lt;code&gt;new&lt;/code&gt; image).&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;loading-pictures-and-standardizing-the-sizes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Loading pictures and standardizing the sizes&lt;/h1&gt;
&lt;p&gt;First, let’s load the pictures and look at the dimensions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(jpeg)
path = &amp;quot;C:/Users/mirac/Desktop/Work/acadblog2/static/img/imagecompression&amp;quot;
tour = readJPEG(paste(path,&amp;quot;paris_tourist.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))
no_tour = readJPEG(paste(path,&amp;quot;paris_no_tourist.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))
new = readJPEG(paste(path,&amp;quot;rome.jpg&amp;quot;, sep = &amp;quot;/&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(tour); dim(no_tour); dim(new)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 459 715   3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 458 715   3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 500 750   3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The three pistures do not have the same dimensions so let’s resize them to &lt;code&gt;458, 715, 3.&lt;/code&gt; The &lt;code&gt;3&lt;/code&gt; represents &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, and &lt;code&gt;B&lt;/code&gt;, the three color schemes from the images.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;EBImage&amp;quot;)
# scale to a specific width and height
tour &amp;lt;- resize(tour, w = 458, h = 715)
new &amp;lt;- resize(new, w = 458, h = 715)

# extract the pixel array
tour &amp;lt;- as.array(tour)
new &amp;lt;- as.array(new)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-tour-image.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;tour&lt;/code&gt; Image.&lt;/h1&gt;
&lt;div id=&#34;pca&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PCA&lt;/h2&gt;
&lt;p&gt;Break down each color scheme into three dataframe and perform PCA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rtour = tour[, ,1]
gtour = tour[, ,2]
btour = tour[, ,3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prtour = prcomp(rtour, center = FALSE)
pgtour = prcomp(gtour, center = FALSE)
pbtour = prcomp(btour, center = FALSE)

tour.pca = list(prtour, pgtour, pbtour)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scree-plot-and-cumulative-variation-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scree Plot and Cumulative Variation Plot&lt;/h2&gt;
&lt;p&gt;Take a look at the Scree plot of the PCA.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
# Create a dataframe for easier plotting
df = data.frame(scheme = rep(c(&amp;quot;R&amp;quot;, &amp;quot;G&amp;quot;, &amp;quot;B&amp;quot;),each =458), 
                index = rep(1:458,  3),
                var = c(prtour$sdev^2,
                        pgtour$sdev^2, 
                        pbtour$sdev^2))

df %&amp;lt;&amp;gt;% group_by(scheme) %&amp;gt;%
  mutate(propvar =100*var/sum(var)) %&amp;gt;%
  mutate(cumsum = cumsum(propvar)) %&amp;gt;%
  ungroup()

#plot
library(ggplot2)
#relevel to make it look nicer
df$scheme = factor(df$scheme,levels(df$scheme)[c(3,2,1)])

df %&amp;gt;% ggplot(aes( x = index, y = propvar, fill = scheme)) + 
    geom_bar(stat=&amp;quot;identity&amp;quot;) + 
    labs(title=&amp;quot;Screeplot of Principal Component&amp;quot;, x =&amp;quot;Principal Component&amp;quot;, 
         y=&amp;quot;% of Variance&amp;quot;) + geom_line()  + 
    scale_x_continuous(limits = c(0,30)) +
    facet_wrap(~scheme)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:screeplot&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/project/2018-04-14-test-compress-2_files/figure-html/screeplot-1.png&#34; alt=&#34;The **elbow** of the screeplot is between the fourth and the fifth PC&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: The &lt;strong&gt;elbow&lt;/strong&gt; of the screeplot is between the fourth and the fifth PC
&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% ggplot(aes( x = index, y = cumsum, fill = scheme)) + 
    geom_bar(stat=&amp;quot;identity&amp;quot;) + 
    labs(title=&amp;quot;Cumulative Proportion of Variance Explained Principal Component&amp;quot;, x=&amp;quot;Principal Component&amp;quot;, 
         y=&amp;quot;Cumulative % of Variance&amp;quot;) + geom_line() + 
    scale_x_continuous(limits = c(0,30)) +
    facet_wrap(~scheme)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:cumprop&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/project/2018-04-14-test-compress-2_files/figure-html/cumprop-1.png&#34; alt=&#34;Thirty PCs appear to be good enough to explain most of the variations&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Thirty PCs appear to be good enough to explain most of the variations
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It seems like the first 30 PCs have enough proportion of variance covered because the proportion of variance explained is close to 100%.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;image-reconstruction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Image Reconstruction&lt;/h2&gt;
&lt;p&gt;Let’s reconstruct the first image. I choose to look at the images constructed from 2, 30, 200, and 300 Prinicipal Components.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This is the number of desired PCs
pcnum = c(2,30,200, 300)

for(i in pcnum){
    pca.img &amp;lt;- sapply(tour.pca, function(j) {
      compressed.img &amp;lt;- j$x[,1:i] %*% t(j$rotation[,1:i])
    }, simplify = &amp;#39;array&amp;#39;)
  writeJPEG(pca.img, paste(path,&amp;quot;/tour/tour_compressed_&amp;quot;, round(i,0), &amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_2_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_30_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_200_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/img/imagecompression/tour/tour_compressed_300_components.jpg&#34; alt=&#34;Compress images using 2, 30, 200 and 300 PCs respectively.&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Compress images using 2, 30, 200 and 300 PCs respectively.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It appears that using 200 PCs is enough to compress the image while maintaining a good quality.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;image-size-compression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Image Size Compression&lt;/h2&gt;
&lt;p&gt;But how about the sizes of these images?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;original &amp;lt;- file.info(paste(path,&amp;quot;paris_tourist.jpg&amp;quot;, sep =&amp;quot;/&amp;quot;))$size / 1000

for(i in pcnum){
  filename = paste(&amp;quot;tour_compressed_&amp;quot;,i,&amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;)
  full.path = paste(path,&amp;quot;tour&amp;quot;,filename,sep = &amp;quot;/&amp;quot;)
  size = file.info(full.path)$size/1000
  cat(filename, &amp;#39;size:&amp;#39;,size,&amp;quot;\n&amp;quot;,
      &amp;quot;Reduction from the original image: &amp;quot;,(original-size)/original*100,&amp;quot;% \n\n&amp;quot; )
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tour_compressed_2_components.jpg size: 30.258 
##  Reduction from the original image:  53.07237 % 
## 
## tour_compressed_30_components.jpg size: 55.743 
##  Reduction from the original image:  13.54726 % 
## 
## tour_compressed_200_components.jpg size: 43.244 
##  Reduction from the original image:  32.93216 % 
## 
## tour_compressed_300_components.jpg size: 39.435 
##  Reduction from the original image:  38.8396 %&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Surprisingly, the compressed image that uses 30 PCs has the lowest reduction of image size.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-no_tour-image&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;no_tour&lt;/code&gt; Image&lt;/h1&gt;
&lt;p&gt;Now, let’s use a similar image (&lt;code&gt;no_tour&lt;/code&gt;) and use the Principal Loadings obtained from the previous step to execute image compression.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;compress ()&lt;/code&gt; function is meant for compressing a new image (i.e., image not used in the previous step to obtain Principal Loadings).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rno_tour = no_tour[, ,1]
gno_tour = no_tour[, ,2]
bno_tour = no_tour[, ,3]

no_tour_rgb = list(rno_tour,gno_tour,bno_tour)

compress &amp;lt;- function(trained_rgb_pca, newrgb, pcnum, dims){
   r_rotate = trained_rgb_pca[[1]]$rotation
   g_rotate = trained_rgb_pca[[2]]$rotation
   b_rotate = trained_rgb_pca[[3]]$rotation
   
   r = newrgb[[1]]
   g = newrgb[[2]]
   b = newrgb[[3]]
   
  pred_r = (r %*% r_rotate)[,1:pcnum] %*% t(r_rotate[,1:pcnum])
  pred_g = (g %*% g_rotate)[,1:pcnum] %*% t(g_rotate[,1:pcnum])
  pred_b = (b %*% b_rotate)[,1:pcnum] %*% t(b_rotate[,1:pcnum])
  
  pred.pca = list(pred_r, pred_g, pred_b)
  pred.array = array(as.numeric(unlist(pred.pca)),dim = dims)
  return(pred.array)
}

for(i in pcnum){
    pca.img = compress(tour.pca, no_tour_rgb, pcnum = i, dims = c( 458, 715,3))
    writeJPEG(pca.img, paste(path,&amp;quot;/no_tour&amp;quot;,&amp;quot;/no_tour_compressed_&amp;quot;, round(i,0), &amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_2_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_30_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_200_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-6&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/img/imagecompression/no_tour/no_tour_compressed_300_components.jpg&#34; alt=&#34;Compress simialr images to test the generalizability of PCs&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4: Compress simialr images to test the generalizability of PCs
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;One can observe that the last image’s quality is the best out of four (since it uses the most PCs) but it is not even close to a high quality image.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-new-image.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;new&lt;/code&gt; Image.&lt;/h1&gt;
&lt;p&gt;We now know that the performance of PCA in image compression is highly useful to its original image but not for a similar image. It’s natural to ask whether it will be worst if a totally unrelated image (such as &lt;code&gt;new&lt;/code&gt; image) was used instead. Let’s check it out.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rnew = new[, ,1]
gnew = new[, ,2]
bnew = new[, ,3]

new_rgb = list(rnew,gnew,bnew)

for (i in pcnum){
    pca.img = compress(tour.pca, new_rgb, pcnum = i, dims = c(458,715, 3))
    writeJPEG(pca.img, paste(path,&amp;quot;/new&amp;quot;,&amp;quot;/new_compressed_&amp;quot;, round(i,0), &amp;#39;_components.jpg&amp;#39;, sep = &amp;#39;&amp;#39;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/imagecompression/new/new_compressed_2_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/new/new_compressed_30_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;img src=&#34;/img/imagecompression/new/new_compressed_200_components.jpg&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-9&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/img/imagecompression/new/new_compressed_300_components.jpg&#34; alt=&#34;Compressing a non-related image using previously extracted PC loadings&#34; width=&#34;50%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 5: Compressing a non-related image using previously extracted PC loadings
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;While the image output does not look exactly like the original image, the main features of the image is clearly shown on it. This is pretty impressive because the machine learns the rules of extracting important information based on only one image &lt;code&gt;tour&lt;/code&gt;. One can experiment increase the number of PCs to get a higher resolution image too.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Summary&lt;/h1&gt;
&lt;p&gt;Principal Component Analysis is a great tool for dimension reduction (thus, sinze reduction in this case), extracting important insights, and uncover underlying message of a dataset.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello World: Blogging using Rmd</title>
      <link>/post/hello-world-blogging-using-rmd/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/hello-world-blogging-using-rmd/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#header-1&#34;&gt;Header 1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#header-2&#34;&gt;Header 2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#header-3&#34;&gt;Header 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#new-header-1&#34;&gt;New Header 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;This is the Hello World blog post using Rmd…&lt;/p&gt;
&lt;div id=&#34;header-1&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Header 1&lt;/h1&gt;
&lt;div id=&#34;header-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Header 2&lt;/h2&gt;
&lt;div id=&#34;header-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Header 3&lt;/h3&gt;
&lt;p&gt;Let’s try some math:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\beta = \alpha\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;How about inline math such as &lt;span class=&#34;math inline&#34;&gt;\(b + \alpha\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;How about some R code?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(1:10, 41:50, col = &amp;quot;blue&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-1&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2018-04-12-hello-world-blogging-using-rmd_files/figure-html/unnamed-chunk-1-1.png&#34; alt=&#34;This is a simple plot&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: This is a simple plot
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let’s try mentioning r function.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;plot()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;How about using the alert note?&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;This is an alert. R function within the alert: &lt;code&gt;sum()&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Let’s try alert warning:&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; get serious with &lt;code&gt;arrange()&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;new-header-1&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;New Header 1&lt;/h1&gt;
&lt;p&gt;Just pure chunk of code (not evaluating)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;blogdown::install_hugo()
# or
library(blogdown)
install_hugo()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Second project post- rmd</title>
      <link>/project/second-project-post-rmd/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/second-project-post-rmd/</guid>
      <description>&lt;p&gt;can I add R code in md file? Yes&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(1:10, 41:50)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2018-04-12-second-project-post-rmd_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Does Math expression work?&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\beta = \alpha\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;How about some alert?&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; get serious with &lt;code&gt;arrange()&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0600</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>/project/deep-learning/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/deep-learning/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>/readings/deep-learning/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/readings/deep-learning/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/example-external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/example-external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>First Project Post using md</title>
      <link>/project/2018-04-12-first-project-post/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/2018-04-12-first-project-post/</guid>
      <description>&lt;p&gt;Just a bunch of words, qwertyuiodjlhuslhulc luhidh&lt;/p&gt;

&lt;p&gt;can I add R code in md file? Yes, but it is not executable&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(1:10, 41:50)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Does Math expression work?&lt;/p&gt;

&lt;p&gt;$$\beta = \alpha$$&lt;/p&gt;

&lt;p&gt;How about some alert?&lt;/p&gt;

&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; get serious with &lt;code&gt;arrange()&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Academic: the website designer for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 -0500</pubDate>
      
      <guid>/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Academic&lt;/strong&gt; is a framework to help you create a beautiful website quickly. Perfect for personal sites, blogs, or business/project sites. &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Check out the latest demo&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes. Then head on over to the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start guide&lt;/a&gt; or take a look at the &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily manage various content including homepage, blog posts, publications, talks, and projects&lt;/li&gt;
&lt;li&gt;Extensible via &lt;strong&gt;color themes&lt;/strong&gt; and &lt;strong&gt;widgets/plugins&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Write in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; for easy formatting and code highlighting, with &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; for mathematical expressions&lt;/li&gt;
&lt;li&gt;Social/academic network linking, &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, and &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; comments&lt;/li&gt;
&lt;li&gt;Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;Multilingual and easy to customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic is available in different color themes and font themes.&lt;/p&gt;



&lt;div class=&#34;gallery&#34;&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Default&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Ocean&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Dark&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Default&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Coffee theme with Playfair font&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;1950s&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one-click install using your web browser (recommended)&lt;/li&gt;
&lt;li&gt;install on your computer using Git with the Command Prompt/Terminal app&lt;/li&gt;
&lt;li&gt;install on your computer by downloading the ZIP files&lt;/li&gt;
&lt;li&gt;install on your computer with RStudio&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;quick-install-using-your-web-browser&#34;&gt;Quick install using your web browser&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34;&gt;Install Academic with Netlify&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Netlify will provide you with a customizable URL to access your new site&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;On GitHub, go to your newly created &lt;code&gt;academic-kickstart&lt;/code&gt; repository and edit &lt;code&gt;config.toml&lt;/code&gt; to personalize your site. Shortly after saving the file, your site will automatically update&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-git&#34;&gt;Install with Git&lt;/h3&gt;

&lt;p&gt;Prerequisites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34;&gt;Download and install Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/#quick-install&#34; target=&#34;_blank&#34;&gt;Download and install Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart#fork-destination-box&#34; target=&#34;_blank&#34;&gt;Fork&lt;/a&gt; the &lt;em&gt;Academic Kickstart&lt;/em&gt; repository and clone your fork with Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/sourcethemes/academic-kickstart.git My_Website
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace &lt;code&gt;sourcethemes&lt;/code&gt; with your GitHub username.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize the theme:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd My_Website
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-zip&#34;&gt;Install with ZIP&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract &lt;em&gt;Academic Kickstart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract the &lt;em&gt;Academic theme&lt;/em&gt; to the &lt;code&gt;themes/academic/&lt;/code&gt; folder from the above step&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-rstudio&#34;&gt;Install with RStudio&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;View the guide to installing Academic with RStudio&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you installed on your computer, view your new website by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now visit &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34;&gt;localhost:1313&lt;/a&gt; and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Build your site by running the &lt;code&gt;hugo&lt;/code&gt; command. Then &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;host it for free using Github Pages&lt;/a&gt; or Netlify (refer to the first installation method). Alternatively, copy the generated &lt;code&gt;public/&lt;/code&gt; directory (by FTP, Rsync, etc.) to your production web server (such as a university&amp;rsquo;s hosting service).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of updates and check out the &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;release notes&lt;/a&gt; prior to updating your site.&lt;/p&gt;

&lt;p&gt;Before updating the framework, it is recommended to make a backup of your entire website directory (or at least your &lt;code&gt;themes/academic&lt;/code&gt; directory) and record your current version number.&lt;/p&gt;

&lt;p&gt;By default, Academic is installed as a Git submodule which can be updated by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --remote --merge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Check out the update guide&lt;/a&gt; for full instructions and alternative methods.&lt;/p&gt;

&lt;h2 id=&#34;feedback-contributing&#34;&gt;Feedback &amp;amp; Contributing&lt;/h2&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;issue tracker&lt;/a&gt; to let me know about any bugs or feature requests, or alternatively make a pull request.&lt;/p&gt;

&lt;p&gt;For support, head over to the &lt;a href=&#34;http://discuss.gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo discussion forum&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
